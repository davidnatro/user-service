plugins {
    id "java"
    id "org.springframework.boot" version "3.2.1"
    id "io.spring.dependency-management" version "1.1.4"
}

group = "service-template"
version = "0.0.1"

java {
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set("springCloudVersion", "2023.0.0")
    set("keycloakAdminClientVersion", "23.0.3")
    set("mapstructVersion", "1.5.5.Final")
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.springframework.boot:spring-boot-starter-security"

    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"

    implementation "org.keycloak:keycloak-admin-client:${keycloakAdminClientVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    compileOnly "org.projectlombok:lombok"

    runtimeOnly "io.micrometer:micrometer-registry-prometheus"
    runtimeOnly "org.postgresql:postgresql"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.boot:spring-boot-testcontainers"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:postgresql"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named("test") {
    useJUnitPlatform()
}
